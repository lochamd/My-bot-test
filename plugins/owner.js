const axios = require('axios');
const {cmd , commands} = require('../command')



cmd({
    pattern: "owner",
    desc: "owner the bot",
    category: "main",
    react: "üë®‚Äçüíª",
    filename: __filename
},

async(conn, mek, m,{from, quoted, body, isCmd, command, args, q, isGroup, sender, senderNumber, botNumber2, botNumber, pushname, isMe, isOwner, groupMetadata, groupName, participants, groupAdmins, isBotAdmins, isAdmins, reply}) => {
try{

let dec = `*üëã Hello ${pushname}*

*üë®‚ÄçüíªBLACK-LEAGUE-MDüë®‚Äçüíª*

> *ùó¢ùó™ùó°ùóòùó• ùóúùó°ùóôùó¢* 

*‚ö°·¥è·¥°…¥·¥á Ä …¥·¥Ä·¥ç·¥á -: ·¥Ä…¥…™ ü·¥Ä  ü·¥è·¥Ñ ú·¥Ä…¥·¥Ä*
*‚ö°…¥·¥ú·¥ç ô·¥á Ä* -: 94758315442
*‚ö°·¥° ú·¥Ä·¥õÍú±·¥Ä·¥ò·¥ò ·¥Ñ ú·¥Ä…¥…¥·¥á ü-:* https://whatsapp.com/channel/0029VagpujoJJhzdr8aNPp1D

> *·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è ·¥Ä…¥…™ ü·¥Ä  ü·¥è·¥Ñ ú·¥Ä…¥·¥Ä*
`
await conn.sendMessage(from,{image:{url:`https://telegra.ph/file/3f7249eb429c8211cbba3.jpg`},caption:dec},{quoted:mek});

}catch(e){
console.log(e)
reply(`${e}`)
}
});

cmd({
    pattern: "repo",
    desc: "repo the bot",
    react: "üì°",
    category: "main",
    filename: __filename
},

async(conn, mek, m,{from, quoted, body, isCmd, command, args, q, isGroup, sender, senderNumber, botNumber2, botNumber, pushname, isMe, isOwner, groupMetadata, groupName, participants, groupAdmins, isBotAdmins, isAdmins, reply}) => {
try{

let dec = `*üìç‚Ñùùîº‚ÑôùïÜ-ùïÉùïÄ‚ÑïùïÇ ‚ù§Ô∏è‚Äçüî•üëá*

üë®‚Äçüíª‚ó¶https://github.com/anilaiduwara/BLACK-LEAGUE-MD 


*üìç‚ÑôùïÉùîºùî∏ùïäùîº ùîΩùïÜùïÉùïÉùïÜùïé ùïÑùïê ùïé‚Ñçùî∏ùïãùïäùî∏‚Ñô‚Ñô ‚ÑÇ‚Ñçùî∏‚Ñï‚ÑïùîºùïÉ ‚ù§Ô∏è‚Äçüî•üëá*

üë®‚Äçüíª‚ó¶ https://whatsapp.com/channel/0029VagpujoJJhzdr8aNPp1D

> *·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è ·¥Ä…¥…™ ü·¥Ä  ü·¥è·¥Ñ ú·¥Ä…¥·¥Ä*
`
await conn.sendMessage(from,{image:{url: `https://telegra.ph/file/3f7249eb429c8211cbba3.jpg`},caption:dec},{quoted:mek});

}catch(e){
console.log(e)
reply(`${e}`)
}
});

cmd({
    pattern: "quote",
    desc: "Get a random inspiring quote.",
    category: "fun",
    react: "È¶ÉÊå∞",
    filename: __filename
},
async (conn, mek, m, { from, reply }) => {
    try {
        const response = await axios.get('https://api.quotable.io/random');
        const quote = response.data;
        const message = `
È¶ÉÊå∞ "${quote.content}"
- ${quote.author}
È•æÊÇòÈ•æÊÇóÈ•æÊÇ•È•æÊÇáÈ•æÊÇúÈ•æÊÇáÈ•æÊÇÜ È•æÊÇÇÈ•æÊÇ© È•æÊÇûÈ•æÊÇÅÈ•æÊÇãÈ•æÊÇÅÈ•æÊÇû-È•æÊÇìÈ•æÊÇÜ È•æÊÇôÈ•æÊÇ¢È•æÊÇóÈ•æÊÇ°È•æÊÇáÈ•æÊÇû
        `;
        return reply(message);
    } catch (e) {
        console.error("Error fetching quote:", e);
        reply("ÂûÑËüΩË†ÄÈà©ÊíØÂûà ÁïèËüΩË§å Ëå†Ë§¶Ë§åÂûÑËñ™ ‰º™ qË†ÄËüΩË§åË§¶. ËüªÈà©ÊíóÊñòÊØñÊõÜÔøΩ Ë§åË§üË§ç ‰º™g‰º™ÂñÇÁïè Èà©ÊíêÊØñÂÇÉÊñûÔøΩ.");
    }
});

cmd({
    pattern: "news",
    desc: "Get the latest news headlines.",
    category: "news",
    react: "üì∞",
    filename: __filename
},
async (conn, mek, m, { from, reply }) => {
    try {
        const apiKey="0f2c43ab11324578a7b1709651736382";
        const response = await axios.get(`https://newsapi.org/v2/top-headlines?country=us&apiKey=${apiKey}`);
        const articles = response.data.articles;

        if (!articles.length) return reply("No news articles found.");

        // Send each article as a separate message with image and title
        for (let i = 0; i < Math.min(articles.length, 5); i++) {
            const article = articles[i];
            let message = `
üì∞ *${article.title}*
‚ö†Ô∏è _${article.description}_
üîó _${article.url}_

> *·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è ·¥Ä…¥…™ ü·¥Ä  ü·¥è·¥Ñ ú·¥Ä…¥·¥Ä*
            `;

            console.log('Article URL:', article.urlToImage); // Log image URL for debugging

            if (article.urlToImage) {
                // Send image with caption
                await conn.sendMessage(from, { image: { url: article.urlToImage }, caption: message });
            } else {
                // Send text message if no image is available
                await conn.sendMessage(from, { text: message });
            }
        };
    } catch (e) {
        console.error("Error fetching news:", e);
        reply("Could not fetch news. Please try again later.");
    }
});



